diff --git a/node_modules/@shopify/hydrogen/dist/development/index.js b/node_modules/@shopify/hydrogen/dist/development/index.js
index 4ea2dc1..f19781d 100644
--- a/node_modules/@shopify/hydrogen/dist/development/index.js
+++ b/node_modules/@shopify/hydrogen/dist/development/index.js
@@ -86,6 +86,8 @@ function useCustomerPrivacy(props) {
     onReady,
     ...consentConfig
   } = props;
+  const {register: register2} = useAnalytics();
+  const {ready: customerPrivacyReady} = register2('Customer_Privacy');
   useLoadScript(withPrivacyBanner ? CONSENT_API_WITH_BANNER : CONSENT_API, {
     attributes: {
       id: "customer-privacy-api"
@@ -93,8 +95,15 @@ function useCustomerPrivacy(props) {
   });
   const { observing, setLoaded } = useApisLoaded({
     withPrivacyBanner,
-    onLoaded: onReady
+    onLoaded: (event) => {
+      setTimeout(() => {
+        onReady(event);
+        customerPrivacyReady();
+      }, 10);
+    },
+
   });
+
   const config = useMemo(() => {
     const { checkoutDomain, storefrontAccessToken } = consentConfig;
     if (!checkoutDomain) logMissingConfig("checkoutDomain");
@@ -188,7 +197,10 @@ function useCustomerPrivacy(props) {
                 };
                 customShopify = {
                   ...customShopify,
-                  customerPrivacy: customCustomerPrivacy
+                  customerPrivacy: customCustomerPrivacy,
+                  country: config.country,
+                  locale: config.locale,
+                  accessToken: config.storefrontAccessToken,
                 };
                 setLoaded.customerPrivacy();
                 emitCustomerPrivacyApiLoaded();
@@ -212,6 +224,7 @@ function useCustomerPrivacy(props) {
   return result;
 }
 var hasEmitted = false;
+
 function emitCustomerPrivacyApiLoaded() {
   if (hasEmitted) return;
   hasEmitted = true;
